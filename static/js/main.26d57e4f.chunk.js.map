{"version":3,"sources":["Components/NavBar/Navbar.js","Components/Card/Card.js","redux/articles/articleReducer.js","Containers/Home/Home.js","Components/Form/Form.js","Containers/AddArticle/AddArticle.js","Containers/Contact/Contact.js","Containers/Article/Article.js","App.js","redux/store.js","index.js"],"names":["Navbar","useState","toggleMenu","setToggleMenu","window","innerWidth","largeur","setLargeur","useEffect","changeWidth","addEventListener","removeEventListener","className","to","onClick","Card","props","children","INITIAL_STATE","articles","articleReducer","state","action","type","newArr","unshift","payload","Home","useSelector","dispatch","useDispatch","length","fetch","then","response","json","data","map","item","title","pathname","replace","trim","txt","uuidv4","Form","body","article","setArticle","handleInputs","e","target","classList","contains","newObjState","value","onSubmit","preventDefault","htmlFor","onChange","id","placeholder","AddArticle","Contact","Article","location","useLocation","console","log","App","basename","process","path","element","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26d57e4f.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport './Navbar.css'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function Navbar() {\r\n\r\n    const [toggleMenu, setToggleMenu] = useState(false)\r\n    const [largeur, setLargeur] = useState(window.innerWidth)\r\n\r\n    const toggleNav = () => {\r\n        setToggleMenu(!toggleMenu)\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const changeWidth = () => {\r\n            setLargeur(window.innerWidth)\r\n        }\r\n\r\n        window.addEventListener('resize', changeWidth)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', changeWidth)\r\n        }\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <nav>\r\n            {(toggleMenu || largeur > 500) &&  \r\n            <ul className=\"liste\">\r\n                <Link to='/'>\r\n                    <li className=\"items\">Accueil</li>    \r\n                </Link>\r\n                <Link to='ecrire'>\r\n                    <li className=\"items\">Ecrire</li>\r\n                </Link>\r\n                <Link to='contact'>\r\n                    <li className=\"items\">Contact</li>\r\n                </Link>\r\n            </ul>\r\n            }\r\n            <button onClick={toggleNav} className=\"btn\"> Open </button>\r\n        </nav>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Card.css'\r\n\r\nexport default function Card(props) {\r\n    return (\r\n        <div className=\"card\">\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n","const INITIAL_STATE = {\r\n    articles : []\r\n}\r\n\r\nfunction articleReducer(state = INITIAL_STATE, action){\r\n    switch(action.type){\r\n        case \"ADDARTICLE\" : {\r\n            const newArr = [...state.articles];\r\n            newArr.unshift(action.payload)\r\n            return{\r\n                articles: newArr\r\n            }\r\n        }\r\n        case \"LOADARTICLES\" : {\r\n            return {\r\n                ...state,\r\n                articles: action.payload\r\n            }\r\n        }\r\n    }\r\n\r\n    return state;\r\n}\r\nexport default articleReducer;\r\n\r\n\r\n\r\n\r\n\r\nexport const getArticles = () => dispatch => {\r\n    fetch('https://jsonplaceholder.typicode.com/posts')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            dispatch({\r\n                type: 'LOADARTICLES',\r\n                payload : data\r\n            })\r\n        })\r\n}","import React, {useEffect, useState} from 'react'\r\nimport './Home.css'\r\nimport Card from '../../Components/Card/Card'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { getArticles } from '../../redux/articles/articleReducer'\r\nimport {v4 as uuidv4} from 'uuid'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\n\r\nexport default function Home() {\r\n\r\n    const {articles} = useSelector(state => ({\r\n        ...state.articleReducer\r\n    }))\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if(articles.length === 0){\r\n            dispatch(getArticles())\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n           <h1 className='home-title'>Tous les articles</h1> \r\n           <div className=\"container-cards\">\r\n               {articles.map(item => {\r\n                   return(\r\n                       <Card key={uuidv4()} >\r\n                         \r\n                           <h2>{item.title}</h2>\r\n\r\n                           <Link to={{\r\n                               pathname: `articles/${item.title.replace(/\\s+/g, '-').trim()}`,\r\n                               state: {\r\n                                   txt:\"test\"\r\n                               },\r\n                           }}> \r\n                            Lire l'article\r\n                           </Link>\r\n                       </Card>\r\n                   )\r\n               })}\r\n           </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport './Form.css'\r\n\r\nexport default function Form() {\r\n\r\n    const [article, setArticle] = useState({\r\n        title: \"\",\r\n        body: \"\"\r\n    })\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleForm = e => {\r\n        e.preventDefault();\r\n        dispatch({\r\n            type:\"ADDARTICLE\",\r\n            payload : article\r\n        })\r\n\r\n        setArticle({\r\n            title:\"\",\r\n            body:\"\"\r\n        })\r\n    }\r\n\r\n    const handleInputs = e => {\r\n        if(e.target.classList.contains('inp-title')){\r\n            const newObjState = {...article, title: e.target.value}\r\n            setArticle(newObjState)\r\n        }\r\n        else if(e.target.classList.contains('inp-body')){\r\n            const newObjState = {...article, body: e.target.value}\r\n            setArticle(newObjState)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"title-form\">Ecrivez un article</h1>\r\n\r\n            <form onSubmit={handleForm} className=\"container-form\">\r\n                <label htmlFor=\"title\">Titre</label>\r\n                <input\r\n                    onChange={handleInputs}\r\n                    value={article.title}\r\n                    type=\"text\" id='title' placeholder=\"Entrez le nom de l'article\"\r\n                    className=\"inp-title\"\r\n                />\r\n\r\n                <label htmlFor=\"article\">Votre Article</label>\r\n                <textarea\r\n                    onChange={handleInputs}\r\n                    value={article.body}\r\n                    id=\"article\" placeholder=\"Votre article\"\r\n                    className=\"inp-body\"\r\n                ></textarea>\r\n\r\n                <button>Envoyer l'article</button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport Form from '../../Components/Form/Form'\r\n\r\nexport default function AddArticle() {\r\n    return (\r\n        <div>\r\n            <Form />\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport \"./Contact.css\";\r\n\r\nexport default function Contact() {\r\n  return (\r\n    <>\r\n      <div className=\"container-contact\">\r\n        <h1>Contactez-nous</h1>\r\n        <p>Par mail : blogreact@gmail.com</p>\r\n        <p>Par téléphone : XX-XX-XX-XX-XX</p>\r\n        <p>Rejoignez-nous sur les réseaux</p>\r\n        <ul>\r\n          <li>Facebok</li>\r\n          <li>Twitter</li>\r\n          <li>Youtube</li>\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport './Article.css'\r\n\r\n\r\nexport default function Article() {\r\n\r\n    let location = useLocation()\r\n\r\n        console.log(location);\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"article-content\">\r\n            {/* <h2>Votre article: {location.state.title}</h2>\r\n            <p>{location.state.body}</p> */}\r\n        </div>\r\n    )\r\n}\r\n","import Navbar from './Components/NavBar/Navbar'\nimport Home from './Containers/Home/Home';\nimport AddArticle from './Containers/AddArticle/AddArticle'\nimport Contact from './Containers/Contact/Contact'\nimport Article from './Containers/Article/Article'\nimport { BrowserRouter, Routes, Route } from 'react-router-dom'\n\nfunction App() {\n  return (\n    <>\n    \n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Navbar />\n\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/ecrire\" element={<AddArticle />} />\n        <Route path=\"/contact\" element={<Contact />} />\n        <Route path=\"/articles/:slug\" element={<Article />} />\n      </Routes>\n    </BrowserRouter>\n\n    </>\n  );\n}\n\nexport default App;\n","import {createStore, applyMiddleware, combineReducers} from 'redux';\r\nimport articleReducer from './articles/articleReducer';\r\nimport thunk from 'redux-thunk'\r\n\r\nconst rootReducer = combineReducers({\r\n    articleReducer\r\n})\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport default store\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux'\nimport store from './redux/store'\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}